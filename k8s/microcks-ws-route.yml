kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "{{name}}-ws"
  namespace: '{{ meta.namespace }}'
  annotations:
    {% if current_cr.spec.features.async.ws.ingressAnnotations is defined -%}
    {% for key in current_cr.spec.features.async.ws.ingressAnnotations.keys() -%}
    {{ key }}: {{ current_cr.spec.features.async.ws.ingressAnnotations[key] }}
    {% endfor %}
    {% endif %}

  labels:
    app: "{{name}}"
    group: microcks
spec:
{% if 'url' in microcks %}
  host: {{ microcks.url|regex_replace('^('~(name|regex_escape())~')(.*)','\\1-ws\\2') }}
{% endif %}
  path: "/api/ws"
  to:
    name: {{name}}-async-minion
    kind: Service
  port:
    targetPort: 8080
  tls:
    termination: {{ features.async.ws.openshift.route.type }}
    {% if features.async.ws.openshift.route.key is defined -%}
    key: |-
      {{ features.async.ws.openshift.route.key | indent(6) }}
    {% endif -%}
    {% if features.async.ws.openshift.route.certificate is defined -%}
    certificate: |-
      {{ features.async.ws.openshift.route.certificate | indent(6) }}
    {% endif -%}
    {% if features.async.ws.openshift.route.ca_certificate is defined -%}
    caCertificate: |-
      {{ features.async.ws.openshift.route.ca_certificate | indent(6) }}
    {% endif -%}
    {% if features.async.ws.openshift.route.destination_c_a_certificate is defined -%}
    destinationCACertificate: |-
      {{ features.async.ws.openshift.route.destination_c_a_certificate | indent(6) }}
    {% endif -%}